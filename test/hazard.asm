.text
main:
    # ----------------------------------
    # 测试1：EX-EX数据冒险（RAW类型）
    # 验证转发逻辑是否正常工作
    # ----------------------------------
    li a0, 1               # 初始化a0=1
    li a1, 2               # 初始化a1=2
    add t0, a0, a1         # t0 = 1+2 = 3 (EX阶段)
    add t1, t0, a0         # 立即使用t0，需要转发
    
    # 预期结果：
    # t0 = 0x3, t1 = 0x4 (3+1)
    
    # ----------------------------------
    # 测试2：Load-Use结构冒险
    # 验证流水线是否插入气泡
    # ----------------------------------
    li t2, 0x1234          # 测试数据
    sw t2, -4(sp)           # 存储测试数据到内存
    lw t3, -4(sp)           # 加载指令（MEM阶段）
    add t4, t3, a0         # 立即使用加载结果
    
    # 预期结果：
    # t3 = 0x1234, t4 = 0x1235 (0x1234+1)
    
    # ----------------------------------
    # 测试3：控制冒险（分支预测失败）
    # 验证流水线冲刷是否正常工作
    # ----------------------------------
    li a3, 5               # 初始化a3=5
    li a4, 5               # 初始化a4=5
    beq a3, a4, branch_target  # 分支跳转（ID阶段判断）
    add t5, a0, a1         # 这条指令应该被冲刷
    add t5, a0, a1         # 重复指令用于验证冲刷

branch_target:
    li t6, 0xabcd          # 分支目标指令
    
    # 预期结果：
    # t5保持初始值（未执行被冲刷的指令）
    
    # ----------------------------------
    # 测试4：MEM-EX数据冒险
    # 验证存储后立即使用的转发
    # ----------------------------------
    li t0, 0x5678
    sw t0, -8(sp)           # 存储指令（MEM阶段）
    lw t1, -8(sp)           # 立即加载（EX阶段需要转发）
    
    # 预期结果：
    # t1 = 0x5678
    
    # ----------------------------------
    # 测试5：WAW冒险（写后写）
    # 验证顺序执行的正确性
    # ----------------------------------
    li a6, 10
    li a7, 20
    add t2, a6, a7        # t2 = 30（EX阶段）
    add t2, a7, a7        # 再次写入t2（应该覆盖前值）
    
    # 预期结果：
    # t2 = 40（20+20）

    # 程序终止
end:
    j end